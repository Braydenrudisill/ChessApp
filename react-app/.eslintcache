[{"/Users/braydenrudisill/Desktop/chess-app/react-app/src/index.js":"1","/Users/braydenrudisill/Desktop/chess-app/react-app/src/reportWebVitals.js":"2","/Users/braydenrudisill/Desktop/chess-app/react-app/src/App.js":"3","/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/GameLogic.js":"4","/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/useEventListener.js":"5","/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/GameBoard.js":"6","/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/MoveList.js":"7","/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/Row.js":"8","/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/Cell.js":"9"},{"size":500,"mtime":1607353161962,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607291306743,"results":"12","hashOfConfig":"11"},{"size":174,"mtime":1609276121508,"results":"13","hashOfConfig":"11"},{"size":1926,"mtime":1609365985021,"results":"14","hashOfConfig":"11"},{"size":1173,"mtime":1607392158775,"results":"15","hashOfConfig":"11"},{"size":751,"mtime":1609364930241,"results":"16","hashOfConfig":"11"},{"size":1021,"mtime":1607438769620,"results":"17","hashOfConfig":"11"},{"size":641,"mtime":1609364918710,"results":"18","hashOfConfig":"11"},{"size":2321,"mtime":1609365596245,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12k6fe",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/braydenrudisill/Desktop/chess-app/react-app/src/index.js",[],["40","41"],"/Users/braydenrudisill/Desktop/chess-app/react-app/src/reportWebVitals.js",[],"/Users/braydenrudisill/Desktop/chess-app/react-app/src/App.js",[],"/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/GameLogic.js",["42","43","44","45"],"/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/useEventListener.js",["46","47"],"import React, {useState,useEffect,useRef} from 'react'\n\nfunction useEventListener(eventName, handler, element = window){\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = event => savedHandler.current(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n};\n\nexport default useEventListener\n","/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/GameBoard.js",["48"],"/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/MoveList.js",[],"/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/Row.js",[],"/Users/braydenrudisill/Desktop/chess-app/react-app/src/components/Cell.js",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":8,"column":19,"nodeType":"57","messageId":"58","endLine":8,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":10,"column":12,"nodeType":"57","messageId":"58","endLine":10,"endColumn":15},{"ruleId":"55","severity":1,"message":"60","line":10,"column":17,"nodeType":"57","messageId":"58","endLine":10,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":19,"column":7,"nodeType":"63","endLine":19,"endColumn":9,"suggestions":"64"},{"ruleId":"55","severity":1,"message":"65","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"66","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"55","severity":1,"message":"67","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"55","severity":1,"message":"68","line":15,"column":8,"nodeType":"57","messageId":"58","endLine":15,"endColumn":11},{"ruleId":"69","severity":1,"message":"70","line":49,"column":40,"nodeType":"71","messageId":"72","endLine":49,"endColumn":42},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'setChess' is assigned a value but never used.","Identifier","unusedVar","'key' is assigned a value but never used.","'update' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chess'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'React' is defined but never used.","'useState' is defined but never used.","'MoveList' is defined but never used.","'dot' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [chess]",{"range":"78","text":"79"},[567,569],"[chess]"]